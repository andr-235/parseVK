services:
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vk_api
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d vk_api"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "no"]

  db_backup:
    build:
      context: .
      dockerfile: docker/db-backup/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: vk_api
      POSTGRES_USER: postgres
      PGPASSWORD: postgres
      BACKUP_DIR: /backups
      BACKUP_KEEP_DAYS: 7
      BACKUP_SCHEDULE: "0 3 * * *"
    volumes:
      - postgres_backups:/backups

  api:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/vk_api?schema=public}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/vk_api?schema=public}
      VK_TOKEN: ${VK_TOKEN:-vk1.a.MgXnY9V9Mbxs9nZ0WXQlL9cMOyO8co3kBZQZY8KpuDQpWxqEvgsJLLYO0K5z917B0sSdBUxGDy0d-p43-GvzjtDaB_aqkDWYeuHPikQ8uzyiZnHvP_CkIl47k8WP5TbIbaK_I55C8A2qVmg96YG2mWROCUwjkTqCpEmL8TTaFhZE5YvDi_Ma-7RjYBgyuF7lQdZsew2bb2iqa5JWvAwrgw}
      OLLAMA_API_URL: ${OLLAMA_API_URL:-http://192.168.88.12:11434}

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
      args:
        VITE_APP_TITLE: ${VITE_APP_TITLE:-ВК Аналитик}
        VITE_API_URL: ${VITE_API_URL:-/api}
        VITE_API_WS_URL: ${VITE_API_WS_URL:-auto}
        VITE_DEV_MODE: ${VITE_DEV_MODE:-false}
    ports:
      - "8080:80"
    depends_on:
      - api

volumes:
  postgres_data:
    external: true
    name: parsevk_postgres_data
  postgres_backups:
    name: parsevk_postgres_backups

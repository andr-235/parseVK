name: Deploy to Production Server

# Триггеры запуска workflow
on:
  # Автоматический деплой при push в main ветку
  push:
    branches:
      - main

  # Ручной запуск через GitHub UI
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Debian Server
    runs-on: self-hosted

    steps:
      # Шаг 1: Получаем код из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Шаг 2: Проверяем окружение
      - name: Check environment
        run: |
          echo "=== Current user ==="
          whoami
          echo ""
          echo "=== Working directory ==="
          pwd
          echo ""
          echo "=== Docker version ==="
          docker --version
          echo ""
          echo "=== Docker Compose version ==="
          docker compose version

      # Шаг 3: Деплой приложения
      - name: Deploy application
        working-directory: /opt/parseVK
        run: |
          echo "=== Pulling latest changes from Git ==="
          git fetch origin
          git reset --hard origin/main

          echo "=== Stopping containers ==="
          docker compose down

          echo "=== Removing old images ==="
          docker image prune -af --filter "label=com.docker.compose.project=parsevk" || true

          echo "=== Building and starting containers ==="
          docker compose up -d --build

          echo "=== Waiting for services to start ==="
          sleep 15

          echo "=== Checking container status ==="
          docker compose ps

      # Шаг 4: Проверка работоспособности
      - name: Health check
        working-directory: /opt/parseVK
        run: |
          echo "=== Checking API ==="
          curl -f http://localhost:3000/api/health || echo "⚠️ API health check failed (endpoint may not exist)"

          echo "=== Checking Frontend ==="
          curl -f http://localhost:80 || echo "❌ Frontend check failed"

          echo "=== Container logs (last 20 lines) ==="
          docker compose logs --tail=20

      # Шаг 5: Уведомление об успехе/неудаче
      - name: Deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi

# ==============================================
# PRODUCTION ENVIRONMENT VARIABLES
# ==============================================
# Этот файл является шаблоном для production окружения
# Скопируйте его в .env на сервере и заполните реальными значениями
#
# На сервере выполните:
# cp .env.production.example .env
# nano .env  # и заполните значения
#
# ВАЖНО: Файл .env НЕ должен попадать в git!
# Он уже добавлен в .gitignore
# ==============================================

# ---------------------------------------------
# DATABASE (PostgreSQL)
# ---------------------------------------------
# Строка подключения к базе данных PostgreSQL
# Формат: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=SCHEMA
DATABASE_URL=postgresql://postgres:STRONG_PASSWORD_HERE@db:5432/vk_api?schema=public

# ---------------------------------------------
# VK API TOKEN
# ---------------------------------------------
# Токен доступа к VK API
# Получить можно здесь: https://vkhost.github.io/
# Требуемые права: wall, groups, users, offline
VK_TOKEN=vk1.a.YOUR_VK_TOKEN_HERE

# ---------------------------------------------
# OLLAMA API
# ---------------------------------------------
# URL Ollama сервера, который будет анализировать изображения
# Пример для удалённого сервера: http://192.168.88.12:11434
# Пример для локального запуска в docker-compose: http://ollama:11434
OLLAMA_API_URL=http://192.168.88.12:11434

# ---------------------------------------------
# FRONTEND CONFIGURATION
# ---------------------------------------------
# Название приложения (отображается в UI)
VITE_APP_TITLE=ВК Аналитик

# URL для API запросов из браузера
# Для локальной сети используйте /api (проксируется через nginx)
# Для прямого доступа укажите: http://SERVER_IP:3000/api
VITE_API_URL=/api

# Базовый адрес для WebSocket-подключений.
# Значение auto выбирает ws:// либо wss:// в зависимости от протокола страницы.
VITE_API_WS_URL=auto

# Режим разработки (для production ставьте false)
VITE_DEV_MODE=false

# ---------------------------------------------
# POSTGRESQL (для docker-compose)
# ---------------------------------------------
# Эти переменные используются контейнером postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=STRONG_PASSWORD_HERE
POSTGRES_DB=vk_api

# ---------------------------------------------
# API SERVER
# ---------------------------------------------
# Порт, на котором работает API (внутри контейнера)
PORT=3000

# ---------------------------------------------
# REDIS (опционально)
# ---------------------------------------------
# Redis используется для кэширования
# Адрес Redis сервера
REDIS_URL=redis://redis:6379
